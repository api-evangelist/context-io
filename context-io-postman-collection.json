{
    "id": "637b4883ca0ad666f55df395776747a1",
    "name": "Context.IO",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "8267847c90385fcbd257be2de87c260c",
            "name": "Get Oauth Provers",
            "url": "httpsapi.context.io\/2.0\/\/oauth_providers",
            "description": "List configured OAuth providers.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "dd5ecd59a1933b8647bfbb19f8809b46",
            "name": "Post Oauth Provers",
            "url": "httpsapi.context.io\/2.0\/\/oauth_providers",
            "description": "Adds a new OAuth provider.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Identification of the OAuth provider. This must be either GMAIL and GOOGLEAPPSMARKETPLACE.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_consumer_key",
                    "description": "The OAuth consumer key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_consumer_secret",
                    "description": "The OAuth consumer secret.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "0b4e26aa23c8fbc6cfeed9d4d19387bc",
            "name": "Get Oauth Provers Key",
            "url": "httpsapi.context.io\/2.0\/\/oauth_providers\/{key}",
            "description": "Gets information about a given OAuth provider.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "key",
                    "description": "The consumer key for this external OAuth provider.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "72f1d35d132e57db3b41546e35d17a09",
            "name": "Delete Oauth Provers Key",
            "url": "httpsapi.context.io\/2.0\/\/oauth_providers\/{key}",
            "description": "Removes a given OAuth provider.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "key",
                    "description": "The consumer key for this external OAuth provider.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "266ae1fb23ba66f073c2d030a76913b6",
            "name": "Get Discovery",
            "url": "httpsapi.context.io\/2.0\/\/discovery",
            "description": "Attempts to discover IMAP settings for a given email address.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "source_type",
                    "description": "The type of source you want to discover settings for. Right now, the only supported source type is IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "6b05ce08258b58dc9830036eebfd4765",
            "name": "Get Connect Tokens",
            "url": "httpsapi.context.io\/2.0\/\/connect_tokens",
            "description": "Lists connect tokens created with your API key.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "72952b23ce6f83bcd93425f3cac3ec9f",
            "name": "Post Connect Tokens",
            "url": "httpsapi.context.io\/2.0\/\/connect_tokens",
            "description": "Obtains a new connect_token.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "callback_url",
                    "description": "When the user's mailbox is connected to your API key, the browser will call this url (GET). This call will have a parameter called contextio_token indicating the connect_token related to this callback. You can then do a get on this connect_token to obtain details about the account and source created through that token and save that account id in your own user data.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "service_level",
                    "description": "Sets the service level of the account's source to be created. Possible values are PRO and BASIC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "first_name",
                    "description": "First name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last_name",
                    "description": "Last name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "b0853be54b42c7148ab23151bf248fa4",
            "name": "Get Connect Tokens Token",
            "url": "httpsapi.context.io\/2.0\/\/connect_tokens\/{token}",
            "description": "Gets information about a given connect token.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "94231bd2a3f63ecf30dad12a8b3a0861",
            "name": "Delete Connect Tokens Token",
            "url": "httpsapi.context.io\/2.0\/\/connect_tokens\/{token}",
            "description": "Removes a given connect token.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "bea5be9a147c6c89b512e04463dcd3d2",
            "name": "Get Accounts",
            "url": "httpsapi.context.io\/2.0\/\/accounts",
            "description": "Lists accounts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Only return accounts with sources whose status is of a specific value. If an account has many sources, only those matching the given value will be included in the response. Possible statuses are: INVALID_CREDENTIALS, CONNECTION_IMPOSSIBLE, NO_ACCESS_TO_ALL_MAIL, OK, TEMP_DISABLED and DISABLED.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status_ok",
                    "description": "Set to 0 to get all accounts with sources that are not working correctly. Set to 1 for the opposite. As for the status filter above, only sources matching the specific value are included in the response.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "da8a9eea6190529328a7b0754ebce27d",
            "name": "Post Accounts",
            "url": "httpsapi.context.io\/2.0\/\/accounts",
            "description": "Adds a new account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "first_name",
                    "description": "First name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last_name",
                    "description": "Last name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "e50af9b86e467f757d9e2c14803ea258",
            "name": "Get Accounts",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}",
            "description": "Gets details about a given account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "1ec1f8f250bae81003297df367da2c98",
            "name": "Put Accounts",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}",
            "description": "Modifies a given account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "first_name",
                    "description": "First name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last_name",
                    "description": "Last name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "e8ee2e62f0c13ff5e691bf4be984a6ed",
            "name": "Delete Accounts",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}",
            "description": "Removes a given account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "dd0491cee44dd71e647f1f063085aac0",
            "name": "Get Accounts Connect Tokens",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/connect_tokens",
            "description": "Lists connect tokens created for an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "e3d62e3b1e688dce6bb235509e02c5cd",
            "name": "Post Accounts Connect Tokens",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/connect_tokens",
            "description": "Obtains a new connect_token for a specific account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "callback_url",
                    "description": "When the user's mailbox is connected to your API key, the browser will call this url (GET). This call will have a parameter called contextio_token indicating the connect_token related to this callback. You can then do a get on this connect_token to obtain details about the account and source created through that token and save that account id in your own user data.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "service_level",
                    "description": "Sets the service level of the account's source to be created. Possible values are PRO and BASIC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "first_name",
                    "description": "First name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last_name",
                    "description": "Last name of the account holder.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "d3a3b8c73209746491da7809da2905a8",
            "name": "Get Accounts Connect Tokens Token",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/connect_tokens\/{token}",
            "description": "Gets information about a given connect token.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "18cda612e9a60a2ab3c7784d2eb91d3a",
            "name": "Delete Accounts Connect Tokens Token",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/connect_tokens\/{token}",
            "description": "Remove a given connect token.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "The unique random token used for the graphical account creation process.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "dad7f4a27e29a1342b0b4e869019e744",
            "name": "Get Accounts Contacts",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/contacts",
            "description": "Lists contacts in an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "search",
                    "description": "String identifying the name or the email address of the contact(s) you are looking for.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active_before",
                    "description": "Only include contacts included in at least one email dated before a given time. This parameter should be a standard unix timestamp.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active_after",
                    "description": "Only include contacts included in at least one email dated after a given time. This parameter should be a standard unix timestamp.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "514a559e4ae951cb77564891d63c7195",
            "name": "Get Accounts Contacts Email",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/contacts\/{email}",
            "description": "Gets information about a given contact.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "b3c24526ef2ef7323e5a3dbe9e2d4681",
            "name": "Get Accounts Contacts Email Files",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/contacts\/{email}\/files",
            "description": "Lists files exchanged with a contact. Returns the latest attachments exchanged with one or more email addresses. By \"exchanged with Mr. X\" we mean any file attached to an email received from Mr. X, sent to Mr. X or sent by anyone to both Mr. X and the mailbox owner.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "adc01285fc9eadb0bc6f801bf6971900",
            "name": "Get Accounts Contacts Email Messages",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/contacts\/{email}\/messages",
            "description": "Lists messages where a contact is present. Returns the latest email messages exchanged with one or more email addresses. By \"exchanged with Mr. X\" we mean any email received from Mr. X, sent to Mr. X or sent by anyone to both Mr. X and the mailbox owner.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "1d2fdd5ca413a686e16230d96dfaeac4",
            "name": "Get Accounts Contacts Email Threads",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/contacts\/{email}\/threads",
            "description": "Lists threads where a contact is present. Returns the latest email threads exchanged with one or more email addresses. By \"exchanged with Mr. X\" we mean any email received from Mr. X, sent to Mr. X or sent by anyone to both Mr. X and the mailbox owner.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "ef0eea5dce7d3598c5baa873fe3988dd",
            "name": "Get Accounts Email Addresses",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/email_addresses",
            "description": "Lists email addresses used by an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "52804de6e2904abcaef501996c3c16a2",
            "name": "Post Accounts Email Addresses",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/email_addresses",
            "description": "Adds a new email address as an alias for an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email_address",
                    "description": "An email address.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "62b8c7906b0f2e0a9c0c56070111d037",
            "name": "Post Accounts Email Addresses Email",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/email_addresses\/{email}",
            "description": "Makes this email address the primary one for the account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "primary",
                    "description": "Set to 1 to make this email address the primary one for the account.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "3f8036de31183aec9938a445bb8fd4e4",
            "name": "Delete Accounts Email Addresses Email",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/email_addresses\/{email}",
            "description": "Removes an email address form the aliases of an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Email address of a contact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "74913270a22de578c9a748ebbfe4e15f",
            "name": "Get Accounts Files",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files",
            "description": "Lists files found as email attachments. List filters: each of the email, to, from, cc and bcc parameters can be set to a comma-separated list of email addresses. These multiple addresses are treated as an OR combination. You can set more than one parameter when doing this call. Multiple parameters are treated as an AND combination.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "file_name",
                    "description": "Search for files based on their name. You can filter names using typical shell wildcards such as *, ? and [] or regular expressions by enclosing the search expression in a leading \/ and trailing \/. For example, *.pdf would give you all PDF files while \/\\.jpe?g$\/ would return all files whose name ends with .jpg or .jpeg.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "to",
                    "description": "Email address of a contact files have been sent to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "from",
                    "description": "Email address of a contact files have been received from.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cc",
                    "description": "Email address of a contact CC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bcc",
                    "description": "Email address of a contact BCC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_before",
                    "description": "Only include files attached to messages sent before a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_after",
                    "description": "Only include files attached to messages sent after a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_before",
                    "description": "Only include files attached to messages indexed before a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_after",
                    "description": "Only include files attached to messages indexed after a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_by_revisions",
                    "description": "If set to 1, the list will do an intelligent grouping of files to reflect occurrences of the same document. The grouping algorithm is exactly the same as the one used to get file revisions but only the occurrences matching the filters applied to the list will be included in the results.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "fec9b4413e125bcb2d7d8ff0d1531236",
            "name": "Get Accounts Files Fileid",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files\/{fileId}",
            "description": "Gets information about a given file.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fileId",
                    "description": "Unique id of a file.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "37e63a50a4dd08e595a65efaa18ba1ee",
            "name": "Get Accounts Files Fileid Changes",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files\/{fileId}\/changes",
            "description": "Lists files that can be compared with a given file.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fileId",
                    "description": "Unique id of a file.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "a6af3c34072ef10230d5dba5edf15697",
            "name": "Get Accounts Files Fileid Content",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files\/{fileId}\/content",
            "description": "Downloads a given file. Returns the content a given attachment. On-demand data retrieval: since we do not keep full copies of attachments on our servers, the file has to be retrieved from the IMAP server when this call is made. If the IMAP server is unreachable at the time the call is made, this call will return an error.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fileId",
                    "description": "Unique id of a file.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "ad7efe9d9dd3ccca601758267cb37beb",
            "name": "Get Accounts Files Fileid Related",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files\/{fileId}\/related",
            "description": "Lists other files related to a given file. Returns a list of files that are related to the given file. Currently, relation between files is based on how similar their names are.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fileId",
                    "description": "Unique id of a file.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "a388da29865dd623e46e3b2a9d3fd1b5",
            "name": "Get Accounts Files Fileid Revisions",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/files\/{fileId}\/revisions",
            "description": "Lists other revisions of a given file. Returns a list of revisions attached to other emails in the mailbox for a given file. Two files are considered revisions of the same document if their file names are identical outside of revision indicators such as dates, author initials, version numbers and keywords like \"final\" or \"draft\".",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fileId",
                    "description": "Unique id of a file.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "df82c005d6513fb1a3e1553ed7292a60",
            "name": "Get Accounts Messages",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages",
            "description": "Lists email messages for an account. List filters: each of the email, to, from, cc and bcc parameters can be set to a comma-separated list of email addresses. These multiple addresses are treated as an OR combination. You can set more than one parameter when doing this call. Multiple parameters are treated as an AND combination.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "subject",
                    "description": "Get messages whose subject matches this search string. To use regular expressions instead of simple string matching, make sure the string starts and ends with \/.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "to",
                    "description": "Email address of a contact files have been sent to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "from",
                    "description": "Email address of a contact files have been received from.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cc",
                    "description": "Email address of a contact CC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bcc",
                    "description": "Email address of a contact BCC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "folder",
                    "description": "Filter messages by the folder (or Gmail label). This parameter can be the complete folder name with the appropriate hierarchy delimiter for the mail server being queried (eg. Inbox\/My folder) or the \"symbolic name\" of the folder (eg. \\Starred). The symbolic name refers to attributes used to refer to special use folders in a language-independant way. See http:\/\/code.google.com\/apis\/gmail\/imap\/#xlist (Gmail specific) and RFC-6154.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_before",
                    "description": "Only include files attached to messages sent before a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_after",
                    "description": "Only include files attached to messages sent after a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_before",
                    "description": "Only include files attached to messages indexed before a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_after",
                    "description": "Only include files attached to messages indexed after a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_body",
                    "description": "Set to 1 to include message bodies in the result. Since message bodies must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_headers",
                    "description": "Can be set to 0 (default), 1 or raw. If set to 1, complete message headers, parsed into an array, are included in the results. If set to raw, the headers are also included but as a raw unparsed string. Since full original headers bodies must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_flags",
                    "description": "Set to 1 to include IMAP flags for this message in the result. Since message flags must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body_type",
                    "description": "Used when include_body is set to get only body parts of a given MIME-type (i.e. text\/html).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "1d52e752b12e8ebaf1d3a7e4d517313e",
            "name": "Get Accounts Messages Message",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}",
            "description": "Gets the file, contact and other information about a given email message. As specified in the RFC822, the < and > at the beginning and end of the Message-ID are part of the value and should be included if you're putting an email_message_id in the url.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "6e2b5573c0a79198589ba93606ec6835",
            "name": "Post Accounts Messages Message",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}",
            "description": "Copies or moves a message. Allows you to copy or move a message between folders. If there are more than one sources on the account, you can use this call to copy\/move the message between these sources. In this case, the dst_label parameter must identify the source you want to message to be copied\/moved to.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "dst_folder",
                    "description": "The folder within dst_source the message should be copied to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dst_source",
                    "description": "Label of the source you want the message copied to. This field is required if you're moving a message that already exists in one source of the account to another source of that account. If you only want to move the message to a different folder within the same source, dst_folder is sufficient.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "move",
                    "description": "By default, this calls copies the original message in the destination. Set this parameter to 1 to move instead of copy.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "161462d91412f271bcdfe7760df611b7",
            "name": "Get Accounts Messages Message Body",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/body",
            "description": "Fetches the message body of a given email. On-demand data retrieval: since we do not keep full copies of emails on our servers, this call triggers a connection to the IMAP server to fetch the message. One thing to point out is we do fetch messages in such a way that large files attached to a message won't make any difference in the response time. This call only returns text portions of messages, attachments aren't included. To get a list of attachments on the message, look for the files property",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Identification of the OAuth provider. This must be either GMAIL and GOOGLEAPPSMARKETPLACE.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "d6605f337e25e9f55d79cf026a3f227a",
            "name": "Get Accounts Messages Message Source",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/source",
            "description": "Fetches the message source. Returns the raw RFC-822 message source for the message (including attachments) with no parsing or decoding to any portions of the message. On-demand data retrieval: since we do not keep full copies of emails on our servers, this call triggers a connection to the IMAP server to fetch the message. Attachments are part of the message source so they will impact how fast this call responds.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "d80da0f46e1ff18cffd0068173088b3a",
            "name": "Get Accounts Messages Message Flags",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/flags",
            "description": "Lists message flags for an account. On-demand data retrieval: to ensure up-to-date values, flags are not cached by Context.IO. This call triggers a connection to the IMAP server to fetch the current message flags before it returns.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "6b05cf0b9c4493645a532fae394f8436",
            "name": "Post Accounts Messages Message Flags",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/flags",
            "description": "Sets message flags for a given email.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "seen",
                    "description": "Message has been read. Set this parameter to 1 to set the flag, 0 to unset it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "answered",
                    "description": "Message has been answered. Set this parameter to 1 to set the flag, 0 to unset it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "flagged",
                    "description": "Message is \"flagged\" for urgent\/special attention. Set this parameter to 1 to set the flag, 0 to unset it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "deleted",
                    "description": "Message is \"deleted\" for later removal. An alternative way of deleting messages is to move it to the Trash folder. Set this parameter to 1 to set the flag, 0 to unset it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "draft",
                    "description": "Message has not completed composition (marked as a draft). Set this parameter to 1 to set the flag, 0 to unset it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "8961080ba2182d0db9844f94e3b53f77",
            "name": "Get Accounts Messages Message Headers",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/headers",
            "description": "Lists complete headers of a given email message. On-demand data retrieval: since we do not keep full copies of emails on our servers, this call triggers a connection to the IMAP server to fetch the message headers.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "24c0b4bd79d47ae601e297814205eca0",
            "name": "Get Accounts Messages Message Thread",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/messages\/{message_id}\/thread",
            "description": "Gets information about all messages of the thread a given message is in. This returns an array with the same structure as getting information on a single message for every message in the thread.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "message_id",
                    "description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "5f7c8e75909783610a144160d794337f",
            "name": "Get Accounts Sources",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources",
            "description": "Lists IMAP sources assigned for an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Only return accounts with sources whose status is of a specific value. If an account has many sources, only those matching the given value will be included in the response. Possible statuses are: INVALID_CREDENTIALS, CONNECTION_IMPOSSIBLE, NO_ACCESS_TO_ALL_MAIL, OK, TEMP_DISABLED and DISABLED.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status_ok",
                    "description": "Set to 0 to get all accounts with sources that are not working correctly. Set to 1 for the opposite. As for the status filter above, only sources matching the specific value are included in the response.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "50f3cbc32881247260f578e3e73bf771",
            "name": "Post Accounts Sources",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources",
            "description": "Adds an IMAP account to a given account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "server",
                    "description": "Name of IP of the IMAP server, eg. imap.gmail.com.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "username",
                    "description": "The username used to authentify an IMAP connection. On some servers, this is the same thing as the primary email address.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "use_ssl",
                    "description": "Set to 1 if you want SSL encryption to be used when opening connections to the IMAP server. Any other value will be considered as \"do not use SSL\".",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "port",
                    "description": "Port number to connect to on the server. Keep in mind that most IMAP servers will have one port for standard connection and another one for encrypted connection (see use-ssl parameter above).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Identification of the OAuth provider. This must be either GMAIL and GOOGLEAPPSMARKETPLACE.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "service_level",
                    "description": "Sets the service level of the account's source to be created. Possible values are PRO and BASIC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sync_period",
                    "description": "Sets the period at which the Context.IO index for this source is synced with the origin email account on the IMAP server. Possible values are: 1h, 4h, 12h and 24h (default). Only available on sources with service_level set to PRO.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "password",
                    "description": "Password for authentication on the IMAP server. Ignored if any of the provider_* parameters are set below.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_token",
                    "description": "An OAuth token obtained from the IMAP account provider to be used to authentify on this email account.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_token_secret",
                    "description": "An OAuth token secret obtained from the IMAP account provider to be used to authentify on this email account.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_consumer_key",
                    "description": "The OAuth consumer key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "0bf901c002f3c8d6a3853f7fbb3dded4",
            "name": "Get Accounts Sources Label",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}",
            "description": "Gets parameters and status for an IMAP source.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "3b9ac9f188ed7cc1d78949c88d75b831",
            "name": "Put Accounts Sources Label",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}",
            "description": "Modifies a data source on a given account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "description": "Only return accounts with sources whose status is of a specific value. If an account has many sources, only those matching the given value will be included in the response. Possible statuses are: INVALID_CREDENTIALS, CONNECTION_IMPOSSIBLE, NO_ACCESS_TO_ALL_MAIL, OK, TEMP_DISABLED and DISABLED.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "service_level",
                    "description": "Sets the service level of the account's source to be created. Possible values are PRO and BASIC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sync_period",
                    "description": "Sets the period at which the Context.IO index for this source is synced with the origin email account on the IMAP server. Possible values are: 1h, 4h, 12h and 24h (default). Only available on sources with service_level set to PRO.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "password",
                    "description": "Password for authentication on the IMAP server. Ignored if any of the provider_* parameters are set below.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_token",
                    "description": "An OAuth token obtained from the IMAP account provider to be used to authentify on this email account.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_token_secret",
                    "description": "An OAuth token secret obtained from the IMAP account provider to be used to authentify on this email account.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provider_consumer_key",
                    "description": "The OAuth consumer key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "efeca14d2944b65e01e6d8fd06865434",
            "name": "Delete Accounts Sources Label",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}",
            "description": "Removes a data source of an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "2bfafef7e8085ae66015dc19fc824217",
            "name": "Get Accounts Sources Label Folders",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}\/folders",
            "description": "Lists folders in an IMAP source. Returns folders existing in a given IMAP account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "a60b2e96eff39a9b4eab6e51d6a7615f",
            "name": "Put Accounts Sources Label Folders Folder",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}\/folders\/{folder}",
            "description": "Creates a folder on an IMAP source. A new folder can be added to an IMAP source by PUTting the desired path under the sources\/folders resource.\nWorking with server-specific hierarchy delimiters:\nIMAP servers are free to use the character they want as the folder hierarchy delimiter. The bad news is they don't use the same. The good news is you don't need to know this, we take care of it.\n\nThen what is that delim parameter for?\nGood question. By default, we expect you to specify the folder hierarc",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "delim",
                    "description": "If \/ isn't fancy enough as a hierarchy delimiter when specifying the folder you want to create, you're free to use what you want, just make sure you set this delim parameter to tell us what you're using.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "folder",
                    "description": "The full folder path you want to create. By default, you should use the \/ character as the path hierarchy delimiter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "16ef10d32a1cc0644cbda09713816bc8",
            "name": "Get Accounts Sources Label Sync",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}\/sync",
            "description": "Gets the sync status of a data source. Returns the timestamps for the last time the source has been synced with the origin mailbox.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "63adec65bc468c56d9174cd5f613bad0",
            "name": "Post Accounts Sources Label Sync",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sources\/{label}\/sync",
            "description": "Triggers a sync of a data source. This will start a sync job for the source.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The label property of the source instance. Context.IO assigns a label to every source. This label is used to refer to individual sources.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "48ad74cbd47517fa0817a53fd8981955",
            "name": "Get Accounts Sync",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sync",
            "description": "Gets the sync status for all sources of the account. Returns the timestamps for the last time a source has been synced with the origin mailbox.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "a1ffb37d5eb6a778fcac6ba1fc07f1d0",
            "name": "Post Accounts Sync",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/sync",
            "description": "Triggers a sync of all sources on the account. This will start a sync job for all sources under the account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "11fb288745b69017cfe735262cdd2a7d",
            "name": "Get Accounts Threads",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/threads",
            "description": "Lists threads on an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "subject",
                    "description": "Get messages whose subject matches this search string. To use regular expressions instead of simple string matching, make sure the string starts and ends with \/.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "An email address you want to discover IMAP settings for. Make sure source_type is set to IMAP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "to",
                    "description": "Email address of a contact files have been sent to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "from",
                    "description": "Email address of a contact files have been received from.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cc",
                    "description": "Email address of a contact CC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bcc",
                    "description": "Email address of a contact BCC'ed on the messages.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "folder",
                    "description": "Filter messages by the folder (or Gmail label). This parameter can be the complete folder name with the appropriate hierarchy delimiter for the mail server being queried (eg. Inbox\/My folder) or the \"symbolic name\" of the folder (eg. \\Starred). The symbolic name refers to attributes used to refer to special use folders in a language-independant way. See http:\/\/code.google.com\/apis\/gmail\/imap\/#xlist (Gmail specific) and RFC-6154.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_before",
                    "description": "Only include files attached to messages indexed before a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "indexed_after",
                    "description": "Only include files attached to messages indexed after a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active_before",
                    "description": "Only include contacts included in at least one email dated before a given time. This parameter should be a standard unix timestamp.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active_after",
                    "description": "Only include contacts included in at least one email dated after a given time. This parameter should be a standard unix timestamp.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "started_before",
                    "description": "Get threads whose first message is dated before this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "started_after",
                    "description": "Get threads whose first message is dated after this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The maximum number of results to return.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "Start the list at this offset (zero-based).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "e483cf4f398bc516c527723f78821ffc",
            "name": "Get Accounts Threads Thread",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/threads\/{thread_id}",
            "description": "Returns files, contacts and messages on a given thread. The purpose is to allow Gmail extensions to easily retrieve data when users's load a conversation in the Gmail UI. Hence, threads are identified by the value of their Gmail thread prefixed with \"gm-\".\nFor example, if the URL of a conversation in the Gmail UI is https:\/\/mail.google.com\/mail\/u\/0\/#mbox\/13119ab37f00b826, you would obtain the details about this thread by calling:\nGET https:\/\/api.context.io\/2.0\/accounts\/\/threads\/gm-131",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "thread_id",
                    "description": "A gmail_thread_id prefixed with gm-.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "48582e33ac6567e3af2fbee9cc94ce4f",
            "name": "Get Accounts Webhooks",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/webhooks",
            "description": "List WebHooks configured for an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "e0d4d4d94bccbdc05df4be43a2d7b939",
            "name": "Post Accounts Webhooks",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/webhooks",
            "description": "Creates a new WebHook on an account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "callback_url",
                    "description": "When the user's mailbox is connected to your API key, the browser will call this url (GET). This call will have a parameter called contextio_token indicating the connect_token related to this callback. You can then do a get on this connect_token to obtain details about the account and source created through that token and save that account id in your own user data.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "failure_notif_url",
                    "description": "A valid URL Context.IO calls if the WebHooks fails and will no longer be active. That may happen if, for example, the server becomes unreachable or if it closes an IDLE connection and we can't re-establish it. The call will be an HTTP GET with the webhook_id passed as a parameter called id.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_to",
                    "description": "Check for new messages sent to a given name or email address.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_from",
                    "description": "Check for new messages received from a given name or email address.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_cc",
                    "description": "Check for new messages where a given name or email address is cc'ed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_subject",
                    "description": "Check for new messages with a subject matching a given string or regular expresion.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_thread",
                    "description": "Check for new messages in a given thread. Value can be a gmail_thread_id or the email_message_id or message_id of an existing message currently in the thread.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_new_important",
                    "description": "Check for new messages automatically tagged as important by the Gmail Priority Inbox algorithm. To trace all messages marked as important (including those manually set by the user), use filter_folder_added with value \\Important. Note the leading back-slash character in the value, it is required to keep this specific to Gmail Priority Inbox. Otherwise any message placed in a folder called \"Important\" would trigger the WebHook.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_file_name",
                    "description": "Check for new messages where a file whose name matches the given string is attached. Supports wildcards and regular expressions like the file_name parameter of the files list call.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_file_revisions",
                    "description": "Check for new message where a new revision of a given file is attached. The value should be a file_id, see getting file revisions for more info.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_folder_added",
                    "description": "Check for messages filed in a given folder. On Gmail, this is equivalent to having a label applied to a message. The value should be the complete name (including parents if applicable) of the folder you want to track.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter_folder_removed",
                    "description": "Check for messages removed from a given folder. On Gmail, this is equivalent to having a label removed from a message. The value should be the complete name (including parents if applicable) of the folder you want to track.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sync_period",
                    "description": "Sets the period at which the Context.IO index for this source is synced with the origin email account on the IMAP server. Possible values are: 1h, 4h, 12h and 24h (default). Only available on sources with service_level set to PRO.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "f60bb853bf32cb4e6c7596b93e1b8302",
            "name": "Get Accounts Webhooks Webhook",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/webhooks\/{webhook_id}",
            "description": "Gets properties of a given WebHook.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "webhook_id",
                    "description": "Unique id of the webhook instance.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "75bb524b184ba2691ab0551dfebac9e4",
            "name": "Post Accounts Webhooks Webhook",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/webhooks\/{webhook_id}",
            "description": "Changes properties of a given WebHook. The only property of a WebHook that can be changed is it's active property. If you want to change the filters or callback urls, delete it and create a new one.\nChanging the active property can be useful in two cases:\n- Pause\/resume WebHooks: If your application needs up-to-date information when users are logged in the best option is to keep a WebHook with no filters on that account that will be resumed (setting active to 1) when the user logs in and paused",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "active",
                    "description": "The active property of a WebHook allows you to pause (set to 0) or resume (set to 1) it.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "webhook_id",
                    "description": "Unique id of the webhook instance.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        },
        {
            "id": "05110494067bb67e50f838afe73ef21b",
            "name": "Delete Accounts Webhooks Webhook",
            "url": "httpsapi.context.io\/2.0\/\/accounts\/{id}\/webhooks\/{webhook_id}",
            "description": "Cancels a WebHook.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Unique id of an account accessible through your API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "webhook_id",
                    "description": "Unique id of the webhook instance.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "637b4883ca0ad666f55df395776747a1",
            "rawModeData": ""
        }
    ]
}